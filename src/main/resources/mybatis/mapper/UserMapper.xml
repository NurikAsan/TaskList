<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nurikov.tasklist.repository.UserRepository">

    <resultMap id="UserResultMap" type="com.nurikov.tasklist.domain.user.User" autoMapping="false">
        <id property="id" column="user_id"/>
        <result property="name" column="user_name"/>
        <result property="username" column="user_username"/>
        <result property="password" column="user_password"/>

        <collection property="role"
                    ofType="com.nurikov.tasklist.domain.user.Role"
                    autoMapping="false">
            <result property="name" column="user_role_role"/>
        </collection>

        <collection property="tasks" ofType="com.nurikov.tasklist.domain.task.Task" autoMapping="false"
                    resultMap="com.nurikov.tasklist.repository.TaskRepository.TaskResultMap">
        </collection>
    </resultMap>

    <select id="findById" resultMap="UserResultMap">
        select u.id as user_id, u.name as user_name, u.username as user_username, u.password as user_password, ur.role as user_role_rol,
        t.id as id, t.title as title, t.description as description, t.expiration_date as expiration_date,
        t.status as status
        from users u
        left join users_role ur on u.id=ur.user_id
        left join users_tasks ut on u.id=ut.user_id
        left join tasks t on ut.task_id=t.id
        where u.id=#{id}
    </select>

    <select id="findByUsername" resultMap="UserResultMap">
        select u.id as user_id, u.name as user_name, u.username as user_username, u.password as user_password, ur.role as users_role_rol,
        t.id as id, t.title as title, t.description as description, t.expiration_date as expiration_date,
        t.status as status
        from users u
        left join users_role ur on u.id=ur.user_id
        left join users_tasks ut on u.id=ut.user_id
        left join tasks t on ut.task_id=t.id
        where u.username=#{username}
    </select>

    <insert id="update">
        Update users set name=#{name}, username=#{username}, password=#{password}
        where id=#{id}
    </insert>

    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        insert into users(name, username, password)
        values(#{name}, #{username}, #{password})
    </insert>

    <insert id="insertUserRole">
        insert into users_role(user_id, role)
        values(#{userId}, #{role})
    </insert>

    <select id="isTaskOwner" resultType="boolean">
        select exists(
        select 1
        from users_tasks
        where user_id = #{userId} and task_id = #{taskId}
        )
    </select>

    <delete id="delete">
        delete from users
        where id=#{id}
    </delete>
</mapper>
